Capitulo 8 

Project : Generating Random Quiz Files

import random

# The quiz data. Keys are states and values are their capitals.
capitals = {'Alabama': 'Montgomery', 'Alaska': 'Juneau', 'Arizona':'Phoenix',
 'Arkansas': 'Little Rock', 'California': 'Sacramento', 'Colorado':'Denver',
 'Connecticut': 'Hartford', 'Delaware': 'Dover', 'Florida': 'Tallahassee',
 'Georgia': 'Atlanta', 'Hawaii': 'Honolulu', 'Idaho': 'Boise', 'Illinois':
 'Springfield', 'Indiana': 'Indianapolis', 'Iowa': 'Des Moines', 'Kansas':
 'Topeka', 'Kentucky': 'Frankfort', 'Louisiana': 'Baton Rouge', 'Maine':
 'Augusta', 'Maryland': 'Annapolis', 'Massachusetts': 'Boston', 'Michigan':
 'Lansing', 'Minnesota': 'Saint Paul', 'Mississippi': 'Jackson', 'Missouri':
 'Jefferson City', 'Montana': 'Helena', 'Nebraska': 'Lincoln', 'Nevada':
 'Carson City', 'New Hampshire': 'Concord', 'New Jersey': 'Trenton', 
 'New Mexico': 'Santa Fe', 'New York': 'Albany', 'North Carolina':  'Raleigh',
 'North Dakota': 'Bismarck', 'Ohio': 'Columbus', 'Oklahoma': 'Oklahoma City',
 'Oregon': 'Salem', 'Pennsylvania': 'Harrisburg', 'Rhode Island': 'Providence',
 'South Carolina': 'Columbia', 'South Dakota': 'Pierre', 'Tennessee':
 'Nashville', 'Texas': 'Austin', 'Utah': 'Salt Lake City', 'Vermont':
 'Montpelier', 'Virginia': 'Richmond', 'Washington': 'Olympia', 
 'West Virginia': 'Charleston', 'Wisconsin': 'Madison', 'Wyoming': 'Cheyenne'}

for quizNum in range(3):
    # Create the quiz and answer key files.
    with open('capitalsquiz%s.txt' % (quizNum + 1), 'w') as quizFile, \
            open('capitalsquiz_answers%s.txt' % (quizNum + 1), 'w') as answerKeyFile:

            # Write out the header for the quiz.
        quizFile.write('Name:\n\nDate:\n\nPeriod:\n\n')
        quizFile.write(
            (' ' * 20) +
            'State Capitals Quiz (Form %s)' % (quizNum + 1)
        )
        quizFile.write('\n\n')

        # Shuffle the order of the states.
        states = list(capitals.keys())
        random.shuffle(states)

        # Loop through all 50 states, making a question for each.
        for questionNum in range(50):
            # Get right and wrong answers.
            correctAnswer = capitals[states[questionNum]]
            wrongAnswers = list(capitals.values())
            del wrongAnswers[wrongAnswers.index(correctAnswer)]
            wrongAnswers = random.sample(wrongAnswers, 3)
            answerOptions = wrongAnswers + [correctAnswer]
            random.shuffle(answerOptions)

            # Write the question and the answer options to the quiz file.
            quizFile.write('%s. What is the capital of %s?\n' %
                           (questionNum + 1, states[questionNum]))
            for i in range(4):
                quizFile.write('    %s. %s\n' % ('ABCD'[i], answerOptions[i]))
                quizFile.write('\n')
                # Write the answer key to a file.
                answerKeyFile.write(
                    '%s. %s\n' % (
                        questionNum + 1,
                        'ABCD'[answerOptions.index(correctAnswer)]
                    )
                )

Porject : Multiclipboard 

import shelve, pyperclip, sys

mcbShelf = shelve.open('mcb')

if len(sys.argv) == 3 and sys.argv[1].lower()== 'save':
    mcbShelf[sys.argv[2]] = pyperclip.paste()
    #shelf takes the third (second index) in the command line and assigns
    #what is on the clipboard to that keyword
elif len(sys.argv) == 2: #if there are only 2 arguments in the command line
    #list keywords and load content
    if sys.argv[1].lower() == 'list':
        pyperclip.copy(str(list(mcbShelf.keys())))
    elif sys.argv[1] in mcbShelf:
        pyperclip.copy(mcbShelf[sys.argv[1]])

#Extend the multiclipboard program in this so that it has a delet #<keyword> command line argument that will delete a keyword from the shelf.
#the code i have added to the code from the textbook, for the deletion of one keyword and its content, is as follows:
elif len(sys.argv) == 3 and sys.argv[1].lower()== 'delete' and sys.argv[2].lower() in mcbShelf.keys():
    del mcbShelf[sys.argv[2]]
#this is my attempt for the second part of the assignment but it is not correct?
elif len(sys.argv) == 2 and sys.argv[1]== 'DELETEALL':
    for i in list(mcbShelf.keys()):
        del mcbShelf[i]

mcbShelf.close()

